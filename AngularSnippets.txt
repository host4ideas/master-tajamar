--- APP COMPONENT HTML ---
<style>
  svg.material-icons {
    height: 24px;
    width: auto;
  }

  svg.material-icons:not(:last-child) {
    margin-right: 8px;
  }

  svg#rocket {
    width: 80px;
    position: absolute;
    left: -10px;
    top: -24px;
  }

  svg#rocket-smoke {
    height: calc(100vh - 95px);
    position: absolute;
    top: 10px;
    right: 180px;
    z-index: -10;
  }

  a,
  a:visited,
  a:hover {
    color: #1976d2;
    text-decoration: none;
  }

  a:hover {
    color: #125699;
  }

  .terminal {
    position: relative;
    width: 80%;
    max-width: 600px;
    border-radius: 6px;
    padding-top: 45px;
    margin-top: 8px;
    overflow: hidden;
    background-color: rgb(15, 15, 16);
  }

  .terminal::before {
    content: "\2022 \2022 \2022";
    position: absolute;
    top: 0;
    left: 0;
    height: 4px;
    background: rgb(58, 58, 58);
    color: #c2c3c4;
    width: 100%;
    font-size: 2rem;
    line-height: 0;
    padding: 14px 0;
    text-indent: 4px;
  }

  .terminal pre {
    font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
    color: white;
    padding: 0 1rem 1rem;
    margin: 0;
  }

  svg#clouds {
    position: fixed;
    bottom: -160px;
    left: -230px;
    z-index: -10;
    width: 1920px;
  }

  /* Responsive Styles */
  @media screen and (max-width: 767px) {
    .card-container > *:not(.circle-link),
    .terminal {
      width: 100%;
    }

    .card:not(.highlight-card) {
      height: 16px;
      margin: 8px 0;
    }

    .card.highlight-card span {
      margin-left: 72px;
    }

    svg#rocket-smoke {
      right: 120px;
      transform: rotate(-5deg);
    }
  }

  @media screen and (max-width: 575px) {
    svg#rocket-smoke {
      display: none;
      visibility: hidden;
    }
  }
</style>

<div role="main">
  <app-menu></app-menu>
  <router-outlet></router-outlet>

  <svg
    id="clouds"
    xmlns="http://www.w3.org/2000/svg"
    width="2611.084"
    height="485.677"
    viewBox="0 0 2611.084 485.677"
  >
    <title>Gray Clouds Background</title>
    <path
      id="Path_39"
      data-name="Path 39"
      d="M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z"
      transform="translate(142.69 -634.312)"
      fill="#eee"
    />
  </svg>
</div>


--- SERVICE CRUD ---

// Angular
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { HttpClient, HttpHeaders } from '@angular/common/http';
// Environment variables
import { environment } from 'src/environments/environment';
// Model
import { Hospital } from '../models/Hospital';

// Para hacerlo global si necesidad de importarlo en app module
@Injectable({
  providedIn: 'root',
})
export class HospitalesService {
  constructor(private _http: HttpClient) {}

  /**
   * Petición get para recoger todos los elementos
   * @returns {Observable<any>} Observable al cual nos suscribiremos en el componente
   */
  getHospitales(): Observable<any> {
    const request = environment.API_HOSPITALES + '/webresources/hospitales';
    return this._http.get(request);
  }

  /**
   * Petición get para recoger solo un elemento
   * @param {string} id ID del elemento para la petición
   * @returns {Observable<any>} Observable al cual nos suscribiremos en el componente
   */
  findHospital(id: string): Observable<any> {
    const request =
      environment.API_HOSPITALES + '/webresources/hospitales/' + id;
    return this._http.get(request);
  }

  /**
   * Petición delete para eliminar un elemento
   * @param {string} id ID del elemento para la petición
   * @returns {Observable<any>} Observable al cual nos suscribiremos en el componente
   */
  deleteHospital(id: string): Observable<any> {
    const request =
      environment.API_HOSPITALES + '/webresources/hospitales/' + id;
    return this._http.delete(request);
  }

  /**
   * Petición put para actualizar un elemento
   * @param {Hospital} hospital Nuevo hospital para actualizar
   * @returns {Observable<any>} Observable al cual nos suscribiremos en el componente
   */
  updateHospital(hospital: Hospital): Observable<any> {
    const header = new HttpHeaders().set('Content-Type', 'application/json');
    const request = environment.API_HOSPITALES + '/webresources/hospitales/put';
    return this._http.put(request, JSON.stringify(hospital), {
      headers: header,
    });
  }

  /**
   * Petición post para insertar un elemento
   * @param {Hospital} hospital Nuevo hospital para insertar
   * @returns {Observable<any>} Observable al cual nos suscribiremos en el componente
   */
  createHospital(hospital: Hospital): Observable<any> {
    const header = new HttpHeaders().set('Content-Type', 'application/json');
    const request =
      environment.API_HOSPITALES + '/webresources/hospitales/post';
    return this._http.post(request, JSON.stringify(hospital), {
      headers: header,
    });
  }
}


--- COMPONENT FORM Y PARAMS ---

// Base
import {
  Component,
  OnInit,
  ɵViewRef,
  ElementRef,
  ViewChild,
} from '@angular/core';
// Model
import { Empleado } from '../models/empleado';
// Service
import { EmpleadosService } from '../services/empleados.service';
// Rutas
import { ActivatedRoute, ParamMap, Router } from '@angular/router';

@Component({
  selector: 'app-empleados-oficio',
  templateUrl: './empleados-oficio.component.html',
  styleUrls: ['./empleados-oficio.component.css'],
})
export class EmpleadosOficioComponent implements OnInit {
  // Form inputs
  @ViewChild("cajanumero") cajaNumero!: ElementRef;
  @ViewChild("cajanombre") cajaNombre!: ElementRef;
  @ViewChild("cajalocalidad") cajaLocalidad!: ElementRef;

  constructor(private empleadosService: EmpleadosService, private route: ActivatedRoute, private router: Router) {}

  redirect(num: number) {
    this.router.navigate(['numerodoble', num]);
  }

  ngOnInit(): void {
    this.empleadosService
      .getOficios()
      .subscribe((response) => (this.oficios = response));

    this.route.paramMap.subscribe((params: ParamMap) => {
      // Parseamos a número
      const num = +params.get('num')!;
    });
  }
}

<form #createForm="ngForm">
  <label>Id: </label>
  <input
    type="number"
    class="form-control"
    name="cajanumero"
    #cajanumero
  /><br />
  <label>Nombre</label>
  <input type="text" class="form-control" name="cajanombre" #cajanombre /><br />
  <label>Localidad</label>
  <input
    type="text"
    class="form-control"
    name="cajalocalidad"
    #cajalocalidad
  /><br />
  <button class="btn btn-info" (click)="insertarDepartamento()">Create</button>
</form>



--- APP MODULE ---

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';

imports: [BrowserModule, AppRoutingModule, HttpClientModule, FormsModule],